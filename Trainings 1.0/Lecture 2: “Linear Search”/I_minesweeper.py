"""
I. Сапер
Ограничение времени	1 секунда
Ограничение памяти	64Mb
Ввод	стандартный ввод или input.txt
Вывод	стандартный вывод или output.txt
Вам необходимо построить поле для игры "Сапер" по его конфигурации – размерам и координатам расставленных на нем мин.

Вкратце напомним правила построения поля для игры "Сапер":

Поле состоит из клеток с минами и пустых клеток
Клетки с миной обозначаются символом *
Пустые клетки содержат число ki,j, 0≤ ki, j ≤ 8 – количество мин на соседних клетках. Соседними клетками являются
восемь клеток, имеющих смежный угол или сторону.
Формат ввода
В первой строке содержатся три числа: N, 1 ≤ N ≤ 100 - количество строк на поле, M, 1 ≤ M ≤ 100 - количество столбцов
на поле, K, 0 ≤ K ≤ N ⋅ M - количество мин на поле.

В следующих K строках содержатся по два числа с координатами мин: p, 1 ≤ p ≤ N - номер строки мины, q, 1 ≤ 1 ≤ M -
номер столбца мины.

Формат вывода
Выведите построенное поле, разделяя строки поля переводом строки, а столбцы - пробелом.
"""


def print_game_map(game_map, N, M):
    for i in range(1, N + 1):
        for j in range(1, M + 1):
            print(game_map[i][j], end=" ")
        print()


def count_mines(game_map, N, M):
    for i in range(1, N + 1):
        for j in range(1, M + 1):
            if game_map[i][j] != '*':
                count = 0
                if game_map[i - 1][j - 1] == '*':
                    count += 1
                if game_map[i - 1][j] == '*':
                    count += 1
                if game_map[i - 1][j + 1] == '*':
                    count += 1
                if game_map[i][j - 1] == '*':
                    count += 1
                if game_map[i][j + 1] == '*':
                    count += 1
                if game_map[i + 1][j - 1] == '*':
                    count += 1
                if game_map[i + 1][j] == '*':
                    count += 1
                if game_map[i + 1][j + 1] == '*':
                    count += 1
                game_map[i][j] = count


N, M, K = map(int, input().split())

game_map = [[0 for j in range(M + 2)] for i in range(N + 2)]

for k in range(K):
    p, q = map(int, input().split())
    game_map[p][q] = '*'

count_mines(game_map, N, M)
print_game_map(game_map, N, M)
